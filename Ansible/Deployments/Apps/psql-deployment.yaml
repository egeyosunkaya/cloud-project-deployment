apiVersion: v1
kind: ConfigMap
metadata:
  namespace: urlapp
  name: startup-config
data:
    poststart.sh: |-
        #!/bin/bash
        echo "Poststart config starting..."
        sleep 15
        psql -U postgres -c 'CREATE DATABASE url;'
        psql -U postgres -c "CREATE USER urlmanager WITH ENCRYPTED PASSWORD 'urlmanager';"
        psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE url TO urlmanager;"
        psql -U postgres -c 'CREATE DATABASE appuser;'
        psql -U postgres -c "CREATE USER authapp WITH ENCRYPTED PASSWORD 'authapp';"
        psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE appuser TO authapp;"
        echo "Poststart config finised!"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: urlapp
  labels:
    app: postgresql
  annotations:
    linkerd.io/inject: enabled
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgre-container
        image: postgres
        lifecycle:
          postStart:
            exec:
              command: 
                - "/opt/poststart.sh"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          value: "rootpass" 
        volumeMounts:
            - mountPath: /opt/poststart.sh
              subPath: poststart.sh
              name: hookvolume
              
      volumes:
      - name: hookvolume
        configMap:
            name: startup-config
            defaultMode: 0777

---
apiVersion: v1
kind: Service
metadata:
  namespace: urlapp
  name: postgresql-svc
spec:
  type: NodePort
  selector:
    app: postgresql
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 30032